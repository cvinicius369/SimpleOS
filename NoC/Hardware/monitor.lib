; ===============================================
; MONITOR LIBRARY
; BY CAIO VINICIUS
; ===============================================

%IFNDEF __MONITOR_LIB__
%DEFINE __MONITOR_LIB__

; MAIN STRINGS
SystemName db "SimpleOS ASM 1", 0 

; MONITOR  &  WINDOW CONFIGURATIONS
BackWidth            dw 0000h
BackHeigth           dw 0000h
BackColor            db 46
Pagination           db 0
CursorX              db 15
CursorY              db 12
State                db 0
count                dw 0000h

; ROTINE LIBRARY
VGA.SetVideoMode:
    mov ah, 00h
    mov al, 13h 
    int 10h
    mov ax, 320
    mov WORD[BackWidth], ax 
    mov ax, 200
    mov WORD[BackHeigth], ax
    call DrawPixelConfig
ret 
DrawPixelConfig:
    mov ah, 0Ch
    mov al, [BackColor]
    mov cx, 0          ; coluna
    mov dx, 0          ; linha
ret
DrawBackground:
    int 10h
    inc cx
    cmp cx, WORD[BackWidth]
    jne DrawBackground
    mov cx, 0
    inc dx
    cmp dx, WORD[BackHeigth]
    jne DrawBackground
    mov dx, 0
ret
PrintString:
    mov ah, 09h      ; permite definider a cor do caractere e do fundo
    mov bh, [Pagination]
    mov cx, 1
    mov al, [si]
    print:
        int 10h
        inc si
        call MoveCursor
        mov ah, 09h
        mov al, [si]
        cmp al, 0
        jne print
ret 
MoveCursor:
    mov ah, 02h
    mov bh, [Pagination]
    inc dl
    int 10h
ret
EffectInit:
    mov bl, 44
    start:
        mov dh, [CursorY]
        mov dl, [CursorX]
        call MoveCursor
        mov si, SystemName
        call PrintString
        pusha
        mov bl, [State]
        cmp bl, 0
        je Increment
        jmp Decrement
    Increment:
        popa
        inc bl
        call Wainting
        cmp bl, 50
        jne start
        pusha
        mov bl, 1
        mov byte[State], bl
        popa
        jmp start
    Decrement:
        popa 
        dec bl
        call Wainting
        cmp bl, 44
        jne start
        pusha
        mov bl, 0
        mov byte[State], bl
        mov bx, [count]
        inc bx
        mov WORD[count], bx
        cmp bx, 5000
        jne ReturnLoop
        jmp ReturnProg
    ReturnLoop:
        popa
        jmp start
    ReturnProg:
        popa
        ret
ret
Wainting:
    pusha
    mov bx, 0
    time:
        inc bx
        cmp bx, 50000
        jne time
    popa
ret
%ENDIF